name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: üêç Backend Tests
    runs-on: ubuntu-latest
  service:
      postgre:
          image: postgres:15
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: test_db
      ports:
        - 5432:5432
      options: >-
        --health-cmd="pg_isready"
        --health-interval=10s
        --health-timeout=5s
        --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        # requirements.txt is at the root, so no `working-directory` needed here.
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Set up backend test environment
        run: |
         echo "database_url=postgresql://postgres:postgres@localhost:5432/test_db" >> backend/.env
         echo "secret_key=test_secret" >> backend/.env
               
      - name: Run pytest with coverage
        # No working-directory needed here either, as we want to run
        # the command from the root to make 'backend/src' relative to it.
        run: |
          PYTHONPATH=backend/src pytest --cov=backend/src --cov-report=xml --cov-report=term-missing
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
         token: ${{ secrets.CODECOV_TOKEN }}
         files: ./coverage.xml
         flags: backend
         name: backend-tests

  frontend:
    name: ‚öõÔ∏è Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
     
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Clean install dependencies
        working-directory: client
        run: |
            npm ci || (rm -rf node_modules && npm install)

      - name: Run Vitest
        working-directory: client
        run: npm run test:coverage
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
                flags: frontend
                files: ./client/coverage/lcov.info